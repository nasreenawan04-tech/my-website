import{h as y,r as u,j as l,P as f,e as I}from"./index-BgHKv6SK.js";var d="Progress",v=100,[E,C]=y(d),[R,j]=E(d),m=u.forwardRef((e,r)=>{const{__scopeProgress:n,value:o=null,max:a,getValueLabel:b=w,...h}=e;(a||a===0)&&!c(a)&&console.error(_(`${a}`,"Progress"));const s=c(a)?a:v;o!==null&&!p(o,s)&&console.error(M(`${o}`,"Progress"));const t=p(o,s)?o:null,$=i(t)?b(t,s):void 0;return l.jsx(R,{scope:n,value:t,max:s,children:l.jsx(f.div,{"aria-valuemax":s,"aria-valuemin":0,"aria-valuenow":i(t)?t:void 0,"aria-valuetext":$,role:"progressbar","data-state":P(t,s),"data-value":t??void 0,"data-max":s,...h,ref:r})})});m.displayName=d;var g="ProgressIndicator",x=u.forwardRef((e,r)=>{const{__scopeProgress:n,...o}=e,a=j(g,n);return l.jsx(f.div,{"data-state":P(a.value,a.max),"data-value":a.value??void 0,"data-max":a.max,...o,ref:r})});x.displayName=g;function w(e,r){return`${Math.round(e/r*100)}%`}function P(e,r){return e==null?"indeterminate":e===r?"complete":"loading"}function i(e){return typeof e=="number"}function c(e){return i(e)&&!isNaN(e)&&e>0}function p(e,r){return i(e)&&!isNaN(e)&&e<=r&&e>=0}function _(e,r){return`Invalid prop \`max\` of value \`${e}\` supplied to \`${r}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${v}\`.`}function M(e,r){return`Invalid prop \`value\` of value \`${e}\` supplied to \`${r}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${v} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var N=m,V=x;const A=u.forwardRef(({className:e,value:r,...n},o)=>l.jsx(N,{ref:o,className:I("relative h-4 w-full overflow-hidden rounded-full bg-secondary",e),...n,children:l.jsx(V,{className:"h-full w-full flex-1 bg-primary transition-all",style:{transform:`translateX(-${100-(r||0)}%)`}})}));A.displayName=N.displayName;export{A as P};
